set nocompatible


" ================ General Config ====================

if has('gui_running')			 " only run if executing as gVim
  set guioptions-=T  			 " no toolbar
  set guioptions-=m              " no menubar
  set guifont=ProFontWindows:h9  " Font
  set lines=40 columns=125       " default opening size
  colorscheme monokai			 " default theme
endif

filetype off                    " required
syntax enable                   " syntax highlighting
set encoding=utf-8 			    " mystery encoding option
set autoread                    " reload files changed outside vim

set wildmenu         		    " visual autocomplete for command menu
set showmatch          		    " highlight matching [{()}]
set visualbell                  " no sounds
set number						" gutter numbers
set relativenumber              " relative numbers

set nowrap       				" don't wrap lines
set linebreak    				" wrap lines at convenient points

set splitbelow                  " Horizontal splits open below current file
set splitright                  " Vertical splits open to the right of the current file

set expandtab                   " use spaces instead of tabs
set tabstop=4                   " insert 4 spaces whenever the tab key is pressed

set backspace=indent,eol,start  " make backspace behave like it should

set incsearch       		    " search as characters are entered
set hlsearch        		    " highlight matches
set ignorecase					" ignore case when searching
set smartcase                   " ...unless we type a capital

set colorcolumn=79              " set vertical line

" ================ Custom Keybinds ====================

let mapleader=","                           " leader is comma
nnoremap <leader><space> :nohlsearch<CR>    " turn off search highlight
 
nnoremap <C-Left> :tabprevious<CR>          " allow ctrl + left to go tab left
nnoremap <C-Right> :tabnext<CR>				" allow ctrl + right to go tab right


" ================ Plugin Load - VIM ====================
"
let hostname = substitute(system('hostname'), '\n', '', '')

if !has('nvim')

    if has('win32')
	    set rtp+=P:/config/vim/bundle/Vundle.vim
	    call vundle#begin('P:/config/vim/bundle')
    endif

    if has('unix')
        set rtp+=~/.vim/bundle/Vundle.vim
        call vundle#begin()
    endif

	Plugin 'jpalardy/vim-slime'
	Plugin 'jiangmiao/auto-pairs'
    Plugin 'ervandew/supertab'
    Plugin 'itchyny/lightline.vim'
    Plugin 'airblade/vim-gitgutter'
    Plugin 'scrooloose/nerdtree'
	
	call vundle#end()
	
	filetype plugin indent on

	let g:slime_target = "vimterminal"

    let g:lightline = {
    \     'active': {
    \         'left': [['mode', 'paste' ], ['readonly', 'filename', 'modified']],
    \         'right': [['lineinfo'], ['percent'], ['fileformat', 'fileencoding']]
    \      }
    \ } 
    
    set laststatus=2

    map <C-o> :NERDTreeToggle<CR>
    let NERDTreeShowHidden=1
endif
endif


" ================ Plugin Load - NVIM ====================

if has('nvim')
	set runtimepath+=/home/evan/.config/nvim/plug/repos/github.com/Shougo/dein.vim/

	if dein#load_state('/home/evan/.config/nvim/plug/')

	  call dein#begin('/home/evan/.config/nvim/plug/')
  	  call dein#add('/home/evan/.config/nvim/plug/repos/github.com/Shougo/dein.vim/')  
  	"  call dein#add('Shougo/deoplete.nvim')
  	"  call dein#add('davidhalter/jedi')
	"  call dein#add('zchee/deoplete-jedi')

	  " Python plugins
  	"  call dein#add('neovim/python-client')
  	"  call dein#add('ivanov/vim-ipython')
	
	  call dein#add('jiangmiao/auto-pairs')
  	  call dein#add('jpalardy/vim-slime')


  	  call dein#end()
  	  call dein#save_state()
	endif

	if dein#check_install()
  	  call dein#install()
	endif

	let g:slime_target = "neovim"
    let g:slime_python_ipython = 1 
	
    filetype plugin indent on
endif

" ================ Custom Functions ====================

function! ToggleWindowHorizontalVerticalSplit()
  if !exists('t:splitType')
    let t:splitType = 'vertical'
  endif

  if t:splitType == 'vertical' " is vertical switch to horizontal
    windo wincmd K
    let t:splitType = 'horizontal'

  else " is horizontal switch to vertical
    windo wincmd H
    let t:splitType = 'vertical'
  endif
endfunction

nnoremap <silent> <leader>r :call ToggleWindowHorizontalVerticalSplit()<cr>

function! s:BoldOff()
	let hid = 1
	while 1
		let hln = synIDattr(hid, 'name')
		if !hlexists(hln) | break | endif
		if hid == synIDtrans(hid) && synIDattr(hid, 'bold')
			let atr = ['underline', 'undercurl', 'reverse', 'inverse', 'italic', 'standout']
			call filter(atr, 'synIDattr(hid, v:val)')
			let gui = empty(atr) ? 'NONE' : join(atr, ',')
			exec 'highlight ' . hln . ' gui=' . gui
		endif
		let hid += 1
	endwhile
endfunction

call s:BoldOff()
