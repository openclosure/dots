set nocompatible


" ================ General Config ====================

if has('gui_running')			 " only run if executing as gVim
  set guioptions-=T  			 " no toolbar
  set guioptions-=m              " no menubar
  set guifont=ProFontWindows:h8  " Font
  set lines=40 columns=125       " default opening size
  colorscheme monokai			 " default theme
endif

filetype off                    " required
syntax enable                   " syntax highlighting
set encoding=utf-8 			    " mystery encoding option
set autoread                    " reload files changed outside vim


set clipboard+=unnamed          " Fix c/p behavior

set wildmenu         		    " visual autocomplete for command menu
set showmatch          		    " highlight matching [{()}]
set visualbell                  " no sounds
set number						" gutter numbers

set relativenumber              " relative numbers

" set nowrap       				" don't wrap lines
set linebreak    				" wrap lines at convenient points

set splitbelow                  " Horizontal splits open below current file
set splitright                  " Vertical splits open to the right of the current file

set expandtab                   " use spaces instead of tabs
set tabstop=4                   " insert 4 spaces whenever the tab key is pressed

set backspace=indent,eol,start  " make backspace behave like it should

set incsearch       		    " search as characters are entered
set hlsearch        		    " highlight matches
set ignorecase					" ignore case when searching
set smartcase                   " ...unless we type a capital

" set colorcolumn=79              " set vertical line

" Registers are boring and confusing
" cut to system clipboard in visual mode
vnoremap x "*x

" put from system clipboard
nnoremap p "*p
vnoremap p "*p
nnoremap P "*P
vnoremap P "*P

" yank from system clipboard
nnoremap y "*y
vnoremap y "*y
nnoremap Y "*Y
vnoremap Y "*Y

" more natural focus changing
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" ================ Custom Keybinds ====================

let mapleader="\<Space>"                           " leader is comma
nnoremap <leader><,> :nohlsearch<CR>    " turn off search highlight
 
nnoremap <C-Left> :tabprevious<CR>          " allow ctrl + left to go tab left
nnoremap <C-Right> :tabnext<CR>				" allow ctrl + right to go tab right

" set cursorline       		    " highlight current line
" nnoremap <S-Left> :action EditorLeftWithSelection<CR>
" nnoremap <S-Right> :action EditorRightWithSelection<CR>
" nnoremap <S-Up> :action EditorUpWithSelection<CR>
" nnoremap <S-Down> :action EditorDownWithSelection<CR>

" inoremap <S-Left> <C-O>:action EditorLeftWithSelection<CR>
" inoremap <S-Right> <C-O>:action EditorRightWithSelection<CR>
" inoremap <S-Up> <C-O>:action EditorUpWithSelection<CR>
" inoremap <S-Down> <C-O>:action EditorDownWithSelection<CR>

" ================ Plugin Load - VIM ====================
"
let hostname = substitute(system('hostname'), '\n', '', '')

if !has('nvim')

    if has('win32')
	    set rtp+=C:/home/config/vim/bundle/Vundle.vim
	    call vundle#begin('C:/home/config/vim/bundle')
    endif

    if has('unix')
        set rtp+=~/.vim/bundle/Vundle.vim
        call vundle#begin()
    endif

	Plugin 'jpalardy/vim-slime'
	Plugin 'jiangmiao/auto-pairs'
    Plugin 'ervandew/supertab'
    Plugin 'itchyny/lightline.vim'
    Plugin 'airblade/vim-gitgutter'
    Plugin 'scrooloose/nerdtree'
    Plugin 'easymotion/vim-easymotion'
    " Plugin 'davidhalter/jedi-vim'
    Plugin 'jalvesaq/Nvim-R'
    Plugin 'morhetz/gruvbox'
	

	call vundle#end()
	
	filetype plugin indent on

	" NVIM-R Settings
    let Rtools_path = "C:\\RTools"
	let R_assign = 0
	let R_hl_term = 1
	let g:R_openhtml = 0
	nmap <Leader>s <Plug>RESendLine
    vmap <Leader>s <Plug>RESendSelection
	inoremap <Tab> <C-x><C-o>
	let g:SuperTabDefaultCompletionType = "<c-x><c-o>"
	let R_in_buffer = 1

    " Gruvbox Theme
	colorscheme gruvbox			 " default theme
    set background=dark
    let g:gruvbox_bold = 0
    let g:gruvbox_italic = 0

	" Open RStudio to destination terminal (buggy)
	"let RStudio_cmd = 'C:\\Program Files\\RStudio\\bin\\rstudio'

	let g:slime_target = "vimterminal"

    " Bottom line
    let g:lightline = {
    \     'active': {
    \         'left': [['mode', 'paste' ], ['readonly', 'filename', 'modified']],
    \         'right': [['lineinfo'], ['percent'], ['fileformat', 'fileencoding']]
    \      }
    \ } 
    set laststatus=2

    " Nerd Tree
    map <C-o> :NERDTreeToggle C:/home <CR>
    let NERDTreeShowHidden=1
	
	" Easy Motion
	let g:EasyMotion_do_mapping = 0
	nmap s <Plug>(easymotion-overwin-f2)
	let g:EasyMotion_smartcase = 1

	
endif


" ================ Plugin Load - NVIM ====================

if has('nvim')
	set runtimepath+=/home/evan/.config/nvim/plug/repos/github.com/Shougo/dein.vim/

	if dein#load_state('/home/evan/.config/nvim/plug/')

	  call dein#begin('/home/evan/.config/nvim/plug/')
  	  call dein#add('/home/evan/.config/nvim/plug/repos/github.com/Shougo/dein.vim/')  
  	"  call dein#add('Shougo/deoplete.nvim')
  	"  call dein#add('davidhalter/jedi')
	"  call dein#add('zchee/deoplete-jedi')

	  " Python plugins
  	"  call dein#add('neovim/python-client')
  	"  call dein#add('ivanov/vim-ipython')
	
	  call dein#add('jiangmiao/auto-pairs')
  	  call dein#add('jpalardy/vim-slime')


  	  call dein#end()
  	  call dein#save_state()
	endif

	if dein#check_install()
  	  call dein#install()
	endif

	let g:slime_target = "neovim"
    let g:slime_python_ipython = 1 
	
    filetype plugin indent on
endif

" ================ Custom Functions ====================

function! ToggleWindowHorizontalVerticalSplit()
  if !exists('t:splitType')
    let t:splitType = 'vertical'
  endif

  if t:splitType == 'vertical' " is vertical switch to horizontal
    windo wincmd K
    let t:splitType = 'horizontal'

  else " is horizontal switch to vertical
    windo wincmd H
    let t:splitType = 'vertical'
  endif
endfunction

nnoremap <silent> <leader>r :call ToggleWindowHorizontalVerticalSplit()<cr>

